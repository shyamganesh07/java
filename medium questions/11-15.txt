11. Calculate the factorial of a number using a recursive function

import java.util.Scanner;

public class Factorial {
    public static int factorial(int n) {
        if (n < 0) {
            throw new IllegalArgumentException("Factorial is not defined for negative numbers.");
        }
        if (n == 0 || n == 1) {
            return 1;
        }
        return n * factorial(n - 1);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the value of n: ");
        int n = scanner.nextInt();
        try {
            System.out.println("The factorial of " + n + " is: " + factorial(n));
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
        }
    }
}

12. Find the Nth largest number in an array

import java.util.Arrays;
import java.util.Scanner;

public class NthLargest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] array = {14, 67, 48, 23, 5, 62};
        System.out.print("Enter the value of N: ");
        int n = scanner.nextInt();
        
        if (n <= 0 || n > array.length) {
            System.out.println("Invalid value of N");
            return;
        }
        
        Arrays.sort(array);
        System.out.println(n + "th Largest number: " + array[array.length - n]);
    }
}

13. Convert Binary to Decimal and Octal

import java.util.Scanner;

public class BinaryConversion {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Given Number: ");
        String binary = scanner.nextLine();
        
        try {
            int decimal = Integer.parseInt(binary, 2);
            String octal = Integer.toOctalString(decimal);
            
            System.out.println("Decimal Number: " + decimal);
            System.out.println("Octal Number: " + octal);
        } catch (NumberFormatException e) {
            System.out.println("Invalid binary number");
        }
    }
}

14. Find the number of special characters in a given statement

import java.util.Scanner;

public class SpecialCharacters {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Given statement: ");
        String statement = scanner.nextLine();
        
        int count = 0;
        for (char c : statement.toCharArray()) {
            if (!Character.isLetterOrDigit(c) && !Character.isWhitespace(c)) {
                count++;
            }
        }
        
        System.out.println("Number of special Characters: " + count);
    }
}

15. Remove duplicate items from an array

import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class RemoveDuplicates {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of elements in array: ");
        int n = scanner.nextInt();
        int[] array = new int[n];
        
        for (int i = 0; i < n; i++) {
            System.out.print("Enter element" + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
        
        Set<Integer> set = new HashSet<>();
        for (int i : array) {
            set.add(i);
        }
        
        System.out.println("Non-duplicate items: " + set);
    }
}

